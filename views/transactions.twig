{% extends 'layout_main.twig' %}

{% block body %}
	{% include 'layout_header_explorer.twig' %}
	<div class="container mh">
		<div class="container">
			<div class="container search-title" id="aftersearch"></div>
			<div class="banner-servers-box">
				<div class="counter-placeholder"></div>
				<div class="banner-text-left">
					<h4 style="color:#fff;">
						<strong>Transactions and Blocks</strong>
					</h4>
					<p>View the latest transactions and blocks on the Qredit Blockchain.</p>
				</div>
			</div>
			<div class="table-responsive">
				<table class="table">

					<thead>
						<tr>
							<th class="server-tabls-head" scope="col">TX ID</th>
							<th class="server-tabls-head" scope="col">#</th>
							<th class="server-tabls-head" scope="col">Timestamp</th>
							<th class="server-tabls-head" scope="col">Sender</th>
							<th class="server-tabls-head" scope="col">Recipient</th>
							<th class="server-tabls-head" scope="col">Smartbridge</th>
							<th class="server-tabls-head" scope="col">Amount</th>
						</tr>
					</thead>
					<tbody id='transactions' class="server-tabls-row"></tbody>
				</table>


			</div>
		</div>

	</div>
	{% include 'layout_footer.twig' %}

{% endblock %}


{% block javascripts %}
	<script>

		$(document).ready(function () {

var socket = io();

socket.emit('getblocks', {});

socket.on('showblocks', function (data) {

var mainTable = document.getElementById("blocks");

var tr,
td;

data.forEach(function (row) {

tr = document.createElement("tr");

td = document.createElement("td");
td.innerHTML = row.height;
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = row.id;
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = (parseFloat(row.rewardtotal) / 100000000).toFixed(0) + ' out of ' + row.transactionsforged + ' transactions. ';
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = row.lastforgedusername;
tr.appendChild(td);

blocks.appendChild(tr);

});

});

});
	</script>

	<script>

		$(document).ready(function () {

var socket = io();

socket.emit('gettransactions', {});


socket.on('showtransactions', function (data) {


var mainTable = document.getElementById("transactions");


var tr,
td;

data.forEach(function (row) {

tr = document.createElement("tr");

td = document.createElement("td");
td.innerHTML = '<a href="/transaction/' + row.id + '">' + row.id.substr(0, 5) + '...' + row.id.substr(-5) + '</a>';
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = row.confirmations;
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = timeDifference(row.timestamp);
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = '<a href="/wallet/' + row.sender + '">' + row.sender.substr(0, 5) + '...' + row.sender.substr(-5) + '</a>';
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = '<a href="/wallet/' + row.recipient + '">' + row.recipient.substr(0, 5) + '...' + row.recipient.substr(-5) + '</a>';
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = row.smartbridge.substr(0, 15) + '...';
tr.appendChild(td);

td = document.createElement("td");
td.innerHTML = (parseFloat(row.amount) / 100000000).toFixed(0) + ' XQR';
tr.appendChild(td);

transactions.appendChild(tr);


});

});

});

function timeDifference(datetime) {

var d = new Date();
var current = d.getTime();
var previous = Date.parse(datetime);

var msPerMinute = 60 * 1000;
var msPerHour = msPerMinute * 60;
var msPerDay = msPerHour * 24;
var msPerMonth = msPerDay * 30;
var msPerYear = msPerDay * 365;

var elapsed = current - previous;

if (elapsed < msPerMinute) {
return Math.round(elapsed / 1000) + ' seconds ago';
} else if (elapsed < msPerHour) {
return Math.round(elapsed / msPerMinute) + ' minutes ago';
} else if (elapsed < msPerDay) {
return Math.round(elapsed / msPerHour) + ' hours ago';
} else if (elapsed < msPerMonth) {
return 'approximately ' + Math.round(elapsed / msPerDay) + ' days ago';
} else if (elapsed < msPerYear) {
return 'approximately ' + Math.round(elapsed / msPerMonth) + ' months ago';
} else {
return 'approximately ' + Math.round(elapsed / msPerYear) + ' years ago';
}
}

function getStatus(datetime) {

var d = new Date();
var current = d.getTime();
var previous = Date.parse(datetime);

var msPerMinute = 60 * 1000;
var msPerHour = msPerMinute * 60;
var msPerDay = msPerHour * 24;
var msPerMonth = msPerDay * 30;
var msPerYear = msPerDay * 365;

var elapsed = (current - previous) / 1000;

if (elapsed < (16 * 60)) {
return '<span style="color:green;"><i class="fas fa-circle"></i><i class="fas fa-circle"></i></span>';
} else if (elapsed < (24 * 60)) {
return '<span style="color:orange;"><i class="fas fa-circle"></i><i class="fas fa-circle"></i></span>';
} else {
return '<span style="color:red;"><i class="fas fa-circle"></i><i class="fas fa-circle"></i></span>';
}

}
	</script>


{% endblock %}
