<!-- start preloader -->
<div class="preloader">
	<div class="preloader-container">
		<svg version="1.1" id="L5" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewbox="0 0 100 100" enable-background="new 0 0 0 0" xml:space="preserve">
			<circle fill="#675cda" stroke="none" cx="6" cy="50" r="6">
				<animateTransform attributename="transform" dur="1s" type="translate" values="0 15 ; 0 -15; 0 15" repeatcount="indefinite" begin="0.1"/>
			</circle>
			<circle fill="#675cda" stroke="none" cx="30" cy="50" r="6">
				<animateTransform attributename="transform" dur="1s" type="translate" values="0 10 ; 0 -10; 0 10" repeatcount="indefinite" begin="0.2"/>
			</circle>
			<circle fill="#675cda" stroke="none" cx="54" cy="50" r="6">
				<animateTransform attributename="transform" dur="1s" type="translate" values="0 5 ; 0 -5; 0 5" repeatcount="indefinite" begin="0.3"/>
			</circle>
		</svg>
		<span>loading</span>
	</div>
</div>
<!-- end preloader -->
<div

	id="coodiv-header" class="d-flex mx-auto flex-column subpages-header  moon-edition" style="height: 949px;">
	<!-- start header -->
	<div class="bg_overlay_header">
		<div id="particles-bg">
			<canvas class="particles-js-canvas-el" width="2033" height="1017" style="width: 100%; height: 100%;"></canvas>
		</div>
		<img src="img/header/h_bg_02.svg" alt="img-bg">

	</div>
	<!-- Fixed navbar -->
	<nav id="coodiv-navbar-header" class="navbar navbar-expand-md fixed-header-layout">
		<div class="container main-header-coodiv-s">
			<a class="navbar-brand" href="index.html">
				<img class="w-logo" src="img/header/logo-navbar-light.png" alt="">
				<img class="b-logo" src="img/header/logo-navbar-dark.png" alt="">
			</a>
			<button class="navbar-toggle offcanvas-toggle menu-btn-span-bar ml-auto" data-toggle="offcanvas" data-target="#offcanvas-menu-home">
				<span></span>
				<span></span>
				<span></span>
			</button>
			<div class="collapse navbar-collapse navbar-offcanvas" id="offcanvas-menu-home">
				<ul class="navbar-nav ml-auto">
					<li class="nav-item">
						<a class="nav-link" href="/">Home</a>
					</li>


					<li class="nav-item megamenu dropdown">
						<a class="nav-link" href="/persona" role="button" id="services-megamenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Products & Services
							<span class="megamenu-toggle"></span>
						</a>
						<div class="dropdown-menu coodiv-dropdown-megamnu default-megamenu" aria-labelledby="services-megamenu">
							<div class="d-flex justify-content-center bd-highlight mb-3 megamenu-items-header">
								<div class="p-2 bd-highlight">
									<a href="#">
										<i class="bredhicon-sun"></i>
										<h5>Persona</h5>
										<p>The all-in-one KYC toolkit for software implementation.</p>
										<p style="background-color:#d22d3d;border-radius:15px;color:#fff;">
											<strong>Coming Soon!</strong><br>ETA - Q2 2020</p>
									</a>

								</div>

								<div class="p-2 bd-highlight">
									<a href="https://motion.qredit.cloud">
										<i class="bredhicon-sun"></i>
										<h5>Qredit Motion</h5>
										<p>A multicurrency fiat and crypto wallet with QAE functionalities.</p>
										<p style="background-color:#d22d3d;border-radius:15px;color:#fff;">
											<strong>Coming Soon!</strong><br>ETA - Q2 2020</p>
									</a>
								</div>

								<div class="p-2 bd-highlight">
									<a href="/altilly">
										<i class="bredhicon-sun"></i>
										<h5>Altilly</h5>
										<p>Digital Asset Exchange with Qredit as the base currency.</p>
										<p style="background-color:green;border-radius:15px;color:#fff;">
											<strong>Altilly V1</strong>
										</p>
										<p style="background-color:#d22d3d;border-radius:15px;color:#fff;">
											<strong>V2 Coming Soon!</strong><br>ETA - Q2 2020</p>
									</a>
								</div>

								<div class="p-2 bd-highlight">
									<a href="/wallets">
										<i class="bredhicon-sun"></i>
										<h5>Crypto Wallets</h5>
										<p>Qredit Native cryptocurrency wallets for multiple platforms.</p>
										<p style="background-color:green;border-radius:15px;color:#fff;">
											<strong>Click to learn more!</strong>
										</p>
									</a>
								</div>

								<div class="p-2 bd-highlight">
									<a href="/qae">
										<i class="bredhicon-sun"></i>
										<h5>QAE Smart Contracts</h5>
										<p>Create your dApps with QAE Smart Contracts.</p>
										<p style="background-color:#d22d3d;border-radius:15px;color:#fff;">
											<strong>Coming Soon!</strong><br>ETA - Q2 2020</p>
									</a>
								</div>


							</div>
						</div>
					</li>
					<li class="nav-item megamenu dropdown">
						<a class="nav-link" href="#" role="button" id="services-megamenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Blockchain
							<span class="megamenu-toggle"></span>
						</a>
						<div class="dropdown-menu coodiv-dropdown-megamnu default-megamenu" aria-labelledby="services-megamenu">
							<div class="d-flex justify-content-center bd-highlight mb-3 megamenu-items-header">

								<div class="p-2 bd-highlight">
									<a href="/delegatemonitor">
										<i class="bredhicon-sun"></i>
										<h5>Delegate Monitor</h5>
										<p>Monitor the Qredit Blockchain.</p>
										<p style="background-color:green;border-radius:15px;color:#fff;">
											View
										</p>
									</a>

								</div>
								<div class="p-2 bd-highlight">
									<a href="/transactions">
										<i class="bredhicon-sun"></i>
										<h5>Explorer</h5>
										<p>Qredit Blockchain Explorer.</p>
										<p style="background-color:orange;border-radius:15px;color:#fff;">
											Maintenance
										</p>
									</a>
								</div>
								<div class="p-2 bd-highlight">
									<a href="https://xqr-exp.geops.net">
										<i class="bredhicon-sun"></i>
										<h5>Backup Explorer</h5>
										<p>Qredit Blockchain Explorer.</p>
										<p style="background-color:green;border-radius:15px;color:#fff;">
											View
										</p>
									</a>
								</div>

								<div class="p-2 bd-highlight">
									<a href="/tools-api">
										<i class="bredhicon-sun"></i>
										<h5>Tools & API</h5>
										<p>Qredit Blockchain Tools and API Documentation.</p>
										<p style="background-color:#d22d3d;border-radius:15px;color:#fff;">
											<strong>Coming Soon!</strong><br>ETA - Q2 2020</p>
									</a>
								</div>
								<div class="p-2 bd-highlight">
									<a href="/development">
										<i class="bredhicon-sun"></i>
										<h5>Development</h5>
										<p>View the Qredit roadmap and development.</p>
										<p style="background-color:#d22d3d;border-radius:15px;color:#fff;">
											<strong>Coming Soon!</strong><br>ETA - Q2 2020</p>
									</a>
								</div>

							</div>
						</div>
					</li>

					<li class="nav-item">
						<a class="nav-link" href="/contact">Contact us</a>
					</li>
				</ul>
			</div>

		</div>
	</nav>
	<div class="mt-auto header-top-height"></div>
	<h3 class="mt-3 main-header-text-title">
		<img class="w-logo" src="https://qredit.io/sync/2020/02/xqr-dark-wide-980x225.png" style="max-height: 100px;" alt="">


		<span class="sub-page-breadcrumb">
			Enhanced Blockchain Suite
		</h3>


		<div class="mt-auto"></div>
	</div>

	<!--
																														<script>
																														
																														
																															function createHref(url, param, title) {
																														var a = document.createElement('a');
																														var link = document.createTextNode(title);
																														a.appendChild(link);
																														a.title = title;
																														a.href = url + "/" + param;
																														return a;
																														}
																														
																														function createTable(tableType, objectArray, fields, fieldTitles) {
																														let tbl = document.createElement('table');
																														tbl.setAttribute("class", "table")
																														let thead = document.createElement('thead');
																														let thr = document.createElement('tr');
																														fieldTitles.forEach((fieldTitle) => {
																														let th = document.createElement('th');
																														th.appendChild(document.createTextNode(fieldTitle));
																														thr.appendChild(th);
																														});
																														thead.appendChild(thr);
																														tbl.appendChild(thead);
																														
																														var title = document.createElement("h1")
																														var urlToRedirect = '';
																														switch (tableType) {
																														case 'block': urlToRedirect = '/block/'
																														break;
																														
																														case 'wallet': urlToRedirect = '/wallet'
																														break;
																														}
																														
																														tbl.before(title)
																														
																														
																														let tbdy = document.createElement('tbody');
																														
																														
																														let tr = document.createElement('tr');
																														fields.forEach((field) => {
																														var td = document.createElement('td');
																														td.appendChild(createHref(urlToRedirect, objectArray[field], objectArray[field]));
																														tr.appendChild(td);
																														});
																														tbdy.appendChild(tr);
																														
																														tbl.appendChild(tbdy);
																														return tbl;
																														}
																														
																														
																														var socket = io();
																														
																														socket.on('showsearch', function (data) {
																														const resultsNode = document.getElementById("results");
																														resultsNode.textContent = '';
																														
																														if (data.blocks) {
																														var title = document.createElement("h1")
																														title.appendChild(document.createTextNode("Found block:"));
																														
																														results.appendChild(title)
																														results.appendChild(createTable('block', data.blocks, [
																														'id', 'height'
																														], ['Id', 'Height']))
																														}
																														
																														
																														if (data.wallets) {
																														var title = document.createElement("h1")
																														title.appendChild(document.createTextNode("Found wallet:"));
																														
																														results.appendChild(title)
																														results.appendChild(createTable('wallet', data.wallets, [
																														'address', 'balance'
																														], ['Address', 'Balance']))
																														}
																														
																														
																														if (data.transactions) {
																														var title = document.createElement("h1")
																														title.appendChild(document.createTextNode("Found transaction:"));
																														
																														results.appendChild(title)
																														results.appendChild(createTable('transaction', data.transactions, [
																														'sender', 'recipient', 'vendorField'
																														], ['From', 'To', 'Smartbridge']))
																														}
																														
																														if (data.tokenTransactions) {
																														var title = document.createElement("h1")
																														title.appendChild(document.createTextNode("Found token transaction:"));
																														
																														results.appendChild(title)
																														results.appendChild(createTable('tokentransaction', data.tokenTransactions, [
																														'sender', 'recipient', 'vendorField'
																														], ['From', 'To', 'Token Transfer Data']))
																														}
																														
																														
																														if (data.delegates) {
																														var title = document.createElement("h1")
																														title.appendChild(document.createTextNode("Found delegate:"));
																														
																														results.appendChild(title)
																														results.appendChild(createTable('delegate', data.delegates, [
																														'address', 'balance'
																														], ['Address', 'Balance']))
																														}
																														
																														
																														if (data.tokens) {
																														var title = document.createElement("h1")
																														title.appendChild(document.createTextNode("Found token:"));
																														
																														results.appendChild(title)
																														results.appendChild(createTable('token', data.tokens, [
																														'type', 'lastUpdatedBlock'
																														], ['Type', 'Last Block']))
																														}
																														
																														console.log(data)
																														});
																														
																														searchinput.oninput = function () {
																														var searchString = searchinput.value;
																														
																														socket.emit('search', searchString);
																														}
																														</script> -->
	<!-- header top menu end -->
